//
//  VulnerabilityCheckViewController.swift
//  KURSOVAYA
//
//  Created by Denis Ravkin on 03.01.2021.
//

import UIKit

class VulnerabilityCheckViewController: UIViewController {

    @IBOutlet weak var jailbreakLabel: UILabel!
    @IBOutlet weak var emulatorLabel: UILabel!
    @IBOutlet weak var debuggerLabel: UILabel!
    @IBOutlet weak var reToolsLabel: UILabel!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        checkJailbreak()
        checkEmulator()
        checkDebugger()
        checkRETools()
     }
     
     func checkJailbreak() {
         
         let jailbreakStatus = IOSSecuritySuite.amIJailbrokenWithFailMessage()
         
         if jailbreakStatus.jailbroken {
             print("This device is jailbroken")
             print("Because: \(jailbreakStatus.failMessage)")
             jailbreakLabel.backgroundColor = UIColor.red
             jailbreakLabel.text = "Jailbreak detected"
         } else {
             print("This device is not jailbroken")
             jailbreakLabel.backgroundColor = UIColor.green
             jailbreakLabel.text = "Jailbreak not detected"
         }
     }
    
    func checkEmulator() {
        
        let runInEmulator = IOSSecuritySuite.amIRunInEmulator() ? true : false
        
        if runInEmulator {
            print("This device is run in a emulator")
            emulatorLabel.backgroundColor = UIColor.red
            emulatorLabel.text = "Emulator detected"
        } else {
            print("This device is not run in a emulator")
            emulatorLabel.backgroundColor = UIColor.green
            emulatorLabel.text = "Emulator not detected"
        }
        
    }
    
    func checkDebugger() {
        
        let amIDebugged = IOSSecuritySuite.amIDebugged() ? true : false
        
        if amIDebugged {
            print("This device is debugged")
            debuggerLabel.backgroundColor = UIColor.red
            debuggerLabel.text = "Debugger detected"
        } else {
            print("This device is not debugged")
            debuggerLabel.backgroundColor = UIColor.green
            debuggerLabel.text = "Debugger not detected"
        }
        
    }
    
    func checkRETools() {
        
        let amIReverseEngineered = IOSSecuritySuite.amIReverseEngineered() ? true : false
        
        if amIReverseEngineered {
            print("This app is Reverse Engineered")
            reToolsLabel.backgroundColor = UIColor.red
            reToolsLabel.text = "RE Tools detected"
        } else {
            print("This app is not Reverse Engineered")
            reToolsLabel.backgroundColor = UIColor.green
            reToolsLabel.text = "RE Tools not detected"
        }
        
    }

}
